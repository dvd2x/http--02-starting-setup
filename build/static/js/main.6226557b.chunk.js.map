{"version":3,"sources":["axios.js","components/Post/Post.js","containers/Blog/FullPost/FullPost.js","containers/Blog/Posts/Posts.js","containers/Blog/Blog.js","hoc/asyncComponent.js","App.js","registerServiceWorker.js","index.js"],"names":["instance","axios","create","baseURL","defaults","headers","common","post","props","console","log","className","onClick","clicked","title","author","FullPost","state","loadedPost","deletePostHandler","delete","match","params","id","then","response","this","loadData","get","setState","data","style","textAlign","body","Component","Posts","posts","postSelectedHandler","history","push","updatedPosts","slice","map","catch","error","key","path","url","exact","component","AsyncNewPost","importComponent","cmp","default","C","asyncComponent","Blog","auth","to","activeClassName","activeStyle","color","textDecoration","pathname","hash","search","render","App","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","interceptors","request","use","Promise","reject","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6226557b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://jsonplaceholder.typicode.com\"\r\n});\r\n\r\ninstance.defaults.headers.common[\"Authorization\"] = \"AUTH TOKEN FROM INSTANCE\";\r\n\r\n//instance.interceptors.request...\r\n\r\nexport default instance;\r\n","import React from \"react\";\n\nimport \"./Post.css\";\n\nconst post = props => {\n  console.log(props);\n  return (\n    <article className=\"Post\" onClick={props.clicked}>\n      <h1>{props.title}</h1>\n      <div className=\"Info\">\n        <div className=\"Author\">{props.author}</div>\n      </div>\n    </article>\n  );\n};\n\nexport default post;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport \"./FullPost.css\";\n\nclass FullPost extends Component {\n  state = {\n    loadedPost: null\n  };\n\n  componentDidMount() {\n    console.log(this.props);\n    this.loadData();\n  }\n\n  componentDidUpdate() {\n    this.loadData();\n  }\n\n  loadData() {\n    if (this.props.match.params.id) {\n      if (\n        !this.state.loadedPost ||\n        (this.state.loadedPost &&\n          this.state.loadedPost.id !== +this.props.match.params.id)\n      ) {\n        axios.get(\"/posts/\" + this.props.match.params.id).then(response => {\n          //console.log(response);\n          this.setState({ loadedPost: response.data });\n        });\n      }\n    }\n  }\n\n  deletePostHandler = () => {\n    axios.delete(\"/posts/\" + this.props.match.params.id).then(response => {\n      console.log(response);\n    });\n  };\n\n  render() {\n    let post = <p style={{ textAlign: \"center\" }}>Please select a Post!</p>;\n    if (this.props.match.params.id) {\n      post = <p style={{ textAlign: \"center\" }}>Loading...!</p>;\n    }\n    if (this.state.loadedPost) {\n      post = (\n        <div className=\"FullPost\">\n          <h1>{this.state.loadedPost.title}</h1>\n          <p>{this.state.loadedPost.body}</p>\n          <div className=\"Edit\">\n            <button onClick={this.deletePostHandler} className=\"Delete\">\n              Delete\n            </button>\n          </div>\n        </div>\n      );\n    }\n    return post;\n  }\n}\n\nexport default FullPost;\n","import React, { Component } from \"react\";\r\nimport axios from \"../../../axios\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport Post from \"../../../components/Post/Post\";\r\nimport \"./Posts.css\";\r\nimport FullPost from \"../FullPost/FullPost\";\r\n\r\nclass Posts extends Component {\r\n  state = {\r\n    posts: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    axios\r\n      .get(\"/posts/\")\r\n      .then(response => {\r\n        const posts = response.data.slice(0, 4);\r\n        const updatedPosts = posts.map(post => {\r\n          return {\r\n            ...post,\r\n            author: \"Max\"\r\n          };\r\n        });\r\n        this.setState({ posts: updatedPosts });\r\n        //console.log(response);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        //this.setState({ error: true });\r\n      });\r\n  }\r\n\r\n  postSelectedHandler = id => {\r\n    //this.props.history.push({ pathname: \"/\" + id });\r\n    this.props.history.push(\"/posts/\" + id);\r\n  };\r\n\r\n  render() {\r\n    let posts = <p style={{ textAlign: \"center\" }}>Something went wrong!</p>;\r\n    if (!this.state.error) {\r\n      posts = this.state.posts.map(post => {\r\n        return (\r\n          //<Link to={\"/\" + post.id} key={post.id}>\r\n          <Post\r\n            key={post.id}\r\n            title={post.title}\r\n            author={post.author}\r\n            clicked={() => this.postSelectedHandler(post.id)}\r\n          />\r\n          //</Link>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <section className=\"Posts\">{posts}</section>\r\n        <Route\r\n          path={this.props.match.url + \"/:id\"}\r\n          exact\r\n          component={FullPost}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posts;\r\n","import React, { Component } from \"react\";\n//import axios from \"axios\";\nimport { Route, NavLink, Switch, Redirect } from \"react-router-dom\";\n\nimport \"./Blog.css\";\nimport Posts from \"./Posts/Posts\";\nimport asyncComponent from \"../../hoc/asyncComponent\";\n//import NewPost from \"./NewPost/NewPost\";\n\nconst AsyncNewPost = asyncComponent(() => {\n  return import(\"./NewPost/NewPost\");\n});\n\nclass Blog extends Component {\n  state = {\n    auth: true\n  };\n\n  render() {\n    return (\n      <div className=\"Blog\">\n        <header>\n          <nav>\n            <ul>\n              <li>\n                <NavLink\n                  to=\"/posts/\"\n                  exact\n                  activeClassName=\"my-active\"\n                  activeStyle={{\n                    color: \"#fa923f\",\n                    textDecoration: \"underline\"\n                  }}\n                >\n                  Posts\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to={{\n                    pathname: \"/new-post\",\n                    hash: \"#submit\",\n                    search: \"?quick-submit=true\"\n                  }}\n                >\n                  New Post\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n        </header>\n        {/*<Route path=\"/\" exact render={() => <h1>Home</h1>} />\n    <Route path=\"/\" render={() => <h1>Home 2</h1>} />*/}\n        <Switch>\n          {this.state.auth ? (\n            <Route path=\"/new-post\" component={AsyncNewPost} />\n          ) : null}\n          <Route path=\"/posts\" component={Posts} />\n          <Route render={() => <h1>Not found</h1>} />\n          {/* <Redirect from=\"/\" to=\"/posts\" />*/}\n          {/*<Route path=\"/\" component={Posts} />*/}\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Blog;\n","import React, { Component } from \"react\";\r\n\r\nconst asyncComponent = importComponent => {\r\n  return class extends Component {\r\n    state = {\r\n      component: null\r\n    };\r\n\r\n    componentDidMount() {\r\n      importComponent().then(cmp => {\r\n        this.setState({ component: cmp.default });\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const C = this.state.component;\r\n\r\n      return C ? <C {...this.props} /> : null;\r\n    }\r\n  };\r\n};\r\n\r\nexport default asyncComponent;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Blog from \"./containers/Blog/Blog\";\n\nclass App extends Component {\n  render() {\n    return (\n      //<BrowserRouter basename='/my-app' />\n      <BrowserRouter>\n        <div className=\"App\">\n          <Blog />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://jsonplaceholder.typicode.com\";\naxios.defaults.headers.common[\"Authorization\"] = \"AUTH TOKEN\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\naxios.interceptors.request.use(\n  request => {\n    console.log(request);\n    //Edit request config\n    return request;\n  },\n  error => {\n    console.log(error);\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  response => {\n    console.log(response);\n    //Edit request config\n    return response;\n  },\n  error => {\n    console.log(error);\n    return Promise.reject(error);\n  }\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}
{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\avail\\\\Desktop\\\\http--01-starting-setup\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\avail\\\\desktop\\\\http--01-starting-setup\\\\src\\\\containers\\\\Blog\\\\Posts\\\\Posts.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport axios from \"../../../axios\";\nimport Post from \"../../../components/Post/Post\";\nimport \"./Posts.css\";\nimport { Link } from \"react-router-dom\";\n\nclass Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n\n    this.postSelectedHandler = id => {\n      this.setState({\n        selectedPostId: id\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    axios.get(\"/posts/\").then(response => {\n      const posts = response.data.slice(0, 4);\n      const updatedPosts = posts.map(post => {\n        return _objectSpread({}, post, {\n          author: \"Max\"\n        });\n      });\n      this.setState({\n        posts: updatedPosts\n      }); //console.log(response);\n    }).catch(error => {\n      console.log(error); //this.setState({ error: true });\n    });\n  }\n\n  render() {\n    let posts = React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Something went wrong!\");\n\n    if (!this.state.error) {\n      posts = this.state.posts.map(post => {\n        return React.createElement(Link, {\n          to: \"/posts/\" + post.id,\n          key: post.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(Post, {\n          title: post.title,\n          author: post.author,\n          clicked: () => this.postSelectedHandler(post.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }));\n      });\n    }\n\n    return React.createElement(\"section\", {\n      className: \"Posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, posts);\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["C:\\Users\\avail\\desktop\\http--01-starting-setup\\src\\containers\\Blog\\Posts\\Posts.js"],"names":["React","Component","axios","Post","Link","Posts","state","posts","postSelectedHandler","id","setState","selectedPostId","componentDidMount","console","log","props","get","then","response","data","slice","updatedPosts","map","post","author","catch","error","render","textAlign","title"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAO,aAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BK,KAD4B,GACpB;AACNC,MAAAA,KAAK,EAAE;AADD,KADoB;;AAAA,SA0B5BC,mBA1B4B,GA0BNC,EAAE,IAAI;AAC1B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,cAAc,EAAEF;AAAlB,OAAd;AACD,KA5B2B;AAAA;;AAK5BG,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACAb,IAAAA,KAAK,CACFc,GADH,CACO,SADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMX,KAAK,GAAGW,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAAd;AACA,YAAMC,YAAY,GAAGd,KAAK,CAACe,GAAN,CAAUC,IAAI,IAAI;AACrC,iCACKA,IADL;AAEEC,UAAAA,MAAM,EAAE;AAFV;AAID,OALoB,CAArB;AAMA,WAAKd,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAEc;AAAT,OAAd,EARgB,CAShB;AACD,KAZH,EAaGI,KAbH,CAaSC,KAAK,IAAI;AACdb,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ,EADc,CAEd;AACD,KAhBH;AAiBD;;AAMDC,EAAAA,MAAM,GAAG;AACP,QAAIpB,KAAK,GAAG;AAAG,MAAA,KAAK,EAAE;AAAEqB,QAAAA,SAAS,EAAE;AAAb,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAZ;;AACA,QAAI,CAAC,KAAKtB,KAAL,CAAWoB,KAAhB,EAAuB;AACrBnB,MAAAA,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBe,GAAjB,CAAqBC,IAAI,IAAI;AACnC,eACE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAE,YAAYA,IAAI,CAACd,EAA3B;AAA+B,UAAA,GAAG,EAAEc,IAAI,CAACd,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AACE,UAAA,KAAK,EAAEc,IAAI,CAACM,KADd;AAEE,UAAA,MAAM,EAAEN,IAAI,CAACC,MAFf;AAGE,UAAA,OAAO,EAAE,MAAM,KAAKhB,mBAAL,CAAyBe,IAAI,CAACd,EAA9B,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AASD,OAVO,CAAR;AAWD;;AAED,WAAO;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BF,KAA5B,CAAP;AACD;;AA/C2B;;AAkD9B,eAAeF,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"../../../axios\";\r\n\r\nimport Post from \"../../../components/Post/Post\";\r\nimport \"./Posts.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Posts extends Component {\r\n  state = {\r\n    posts: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    axios\r\n      .get(\"/posts/\")\r\n      .then(response => {\r\n        const posts = response.data.slice(0, 4);\r\n        const updatedPosts = posts.map(post => {\r\n          return {\r\n            ...post,\r\n            author: \"Max\"\r\n          };\r\n        });\r\n        this.setState({ posts: updatedPosts });\r\n        //console.log(response);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        //this.setState({ error: true });\r\n      });\r\n  }\r\n\r\n  postSelectedHandler = id => {\r\n    this.setState({ selectedPostId: id });\r\n  };\r\n\r\n  render() {\r\n    let posts = <p style={{ textAlign: \"center\" }}>Something went wrong!</p>;\r\n    if (!this.state.error) {\r\n      posts = this.state.posts.map(post => {\r\n        return (\r\n          <Link to={\"/posts/\" + post.id} key={post.id}>\r\n            <Post\r\n              title={post.title}\r\n              author={post.author}\r\n              clicked={() => this.postSelectedHandler(post.id)}\r\n            />\r\n          </Link>\r\n        );\r\n      });\r\n    }\r\n\r\n    return <section className=\"Posts\">{posts}</section>;\r\n  }\r\n}\r\n\r\nexport default Posts;\r\n"]},"metadata":{},"sourceType":"module"}